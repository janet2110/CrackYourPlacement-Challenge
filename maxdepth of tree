//REcursive solution

 int maxDepth(TreeNode* root) {
        if(root==NULL) return 0;
        int lh=maxDepth(root->left);
        int rh=maxDepth(root->right);
        
        return 1+max(lh,rh);
    }
    
    
    //iterative solution
    int maxDepth(TreeNode* root) {
        int depth=0;
        if(root==NULL) return depth;
        
        queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty()){
            
            int n=q.size();
            depth++;
            
            for(int i=0;i<n;i++){
                TreeNode* temp=q.front();
                q.pop();
                
                if(temp->left!=NULL) q.push(temp->left);
                if(temp->right!=NULL) q.push(temp->right);
                
            }
        }
      return depth;
    }
