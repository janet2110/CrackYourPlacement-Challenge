//ceiling

int binarySearch(int arr[], int l, int r, int x)
{
    int candidate;
    while (l <= r) {
        int m = l + (r - l) / 2;
 
        // Check if x is present at mid
        if (arr[m] == x)
            return m;
 
        // If x greater, ignore left half
        if (arr[m] < x)
            l = m + 1;
 
        // If x is smaller, ignore right half
        else
           {
           r = m - 1;
           candidate= a[mid];
           }
    }
    
    return candidate;
    
    }
    
    
    //floor
    if (arr[m] < x){
    l=m+1;
    candidate=a[mid];
    
    }
